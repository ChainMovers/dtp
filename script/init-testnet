#!/bin/bash

# Just get testnet binaries and build it under dtp-dev.
#
# It is not used for running as localnet, but its binaries will be used for 
# client related development/testing.
#

NETNAME="testnet"
SUI_REPO_BRANCH="testnet"
SUI_SCRIPT="tsui"

# Call the initialization code common to all script.
SCRIPT_READLINK="$(readlink -f "$0")"
SCRIPT_NAME="$(basename $SCRIPT_READLINK)"
SCRIPT_DIR="$(dirname $SCRIPT_READLINK)"
source "$SCRIPT_DIR/script_common" "$SCRIPT_DIR" "$SCRIPT_NAME" "$NETNAME" "$SUI_REPO_BRANCH"

# Create dtp-dev if does not exists.
mkdir -p "$DEV_DIR"

echo "Output location = $DEV_DIR"

# The script should not be called from a location that will get deleted.
# It would work (on Linux) , but it is just to avoid user confusion later.
CWD=$(pwd -P)
if [[ "$CWD" = "$DEV_DIR/testnet"* ]]; then
  echo "This script can't be called from a location to be deleted [$DEV_DIR/testnet]."
  setup_error "Change current directory location and try again."
fi

# If not already done, get the github sui devnet branch.
if [ ! -d "$DEV_DIR/sui-testnet" ]
then
  git clone -b testnet https://github.com/MystenLabs/sui.git "$DEV_DIR/sui-testnet"  || setup_error "Failed getting Sui testnet branch from github";
fi

# Update sui testnet local repo (if needed)
(cd $DEV_DIR/sui-testnet && git remote update >& /dev/null)
V1=$(cd $DEV_DIR/sui-testnet; git rev-parse HEAD)
V2=$(cd $DEV_DIR/sui-testnet; git rev-parse '@{u}')
if [ $V1 != $V2 ]
then 
  # Does a bit more than needed, but should allow to recover
  # from most operator error...
  echo Updating sui local repo in dtp-dev...
  (cd $DEV_DIR/sui-testnet && git switch testnet > /dev/null)
  (cd $DEV_DIR/sui-testnet && git fetch > /dev/null)
  (cd $DEV_DIR/sui-testnet && git reset --hard origin/testnet > /dev/null)
  (cd $DEV_DIR/sui-testnet && git merge '@{u}')
fi

# Verify sui built is latest.
echo Building latest Sui $NETNAME branch...
(cd $DEV_DIR/sui-$NETNAME; cargo build)

# Sanity test that the sui binary works
if [ ! -f "$SUI_BIN_DIR/sui" ]; then
  setup_error "$SUI_BIN_DIR/sui binary not found"
fi

SUI_VERSION=$($SUI_BIN_DIR/sui --version)
if [ -z "$SUI_VERSION" ]; then
  setup_error "$SUI_BIN_DIR/sui --version not running properly"
fi

echo Remember:
echo "  Use \"$SUI_SCRIPT\" to access $NETNAME"
echo
echo Try it by typing \"$SUI_SCRIPT client gas\"
