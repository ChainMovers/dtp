[workspace]
resolver = "2"
members = [
    "crates/dtp-core",
    "crates/dtp-sdk",
    "crates/dtp-server",
    "crates/dtp-test-helper",
]

[workspace.package]
version = "0.1.0"
edition = "2021"
homepage = "https://dtp.dev"
license = "Apache-2.0"
documentation = "https://docs.dtp.dev"
default-run = "dtp-server"

[workspace.dependencies]
# By default, DTP is built using a local repo of Sui (devnet branch).
#
# This make sure that your localnet, DTP and your app are all 
# built and tested using the *same* binaries, saving you from chasing
# unecessary problems of unmatching versions.
#
# The local version is initialized by the script:
#   dtp/script/init-localnet
#
# The development environment is further explained here:
#
#  https://github.com/mario4tier/dtp/tree/main/script
#
# This is all initialized by a single bash script:
#    dtp/script/init-localnet
#
# A re-initialization and a single local copy of everything local is a
# bit "old-school", but it works *SOLID* and keeps your edit/debug cycles
# fast.
#
# If you are not comfortable with this way of doing and
# prefer to have the "typical" rust way then comment out
# the "path" dependencies and un-comment out the "git" ones.
sui-sdk = { path = "../dtp-dev/sui-devnet-branch/crates/sui-sdk/" }
sui-json-rpc-types = { path = "../dtp-dev/sui-devnet-branch/crates/sui-json-rpc-types/" }
sui-keys = { path = "../dtp-dev/sui-devnet-branch/crates/sui-keys/" }
sui-types = { path = "../dtp-dev/sui-devnet-branch/crates/sui-types/" }
sui-adapter = { path = "../dtp-dev/sui-devnet-branch/crates/sui-adapter/" }

# Comment these sui-XXXXX "git" dependencies if using the above "path" dependencies.
#sui-sdk = { git = "https://github.com/MystenLabs/sui", branch = "devnet" }
#sui-json-rpc-types = { git = "https://github.com/MystenLabs/sui", branch = "devnet", package = "sui-json-rpc-types" }
#sui-keys = { git = "https://github.com/MystenLabs/sui", branch = "devnet", package = "sui-keys" }
#sui-types = { git = "https://github.com/MystenLabs/sui", branch = "devnet", package = "sui-types" }
#sui-adapter = { git = "https://github.com/MystenLabs/sui", branch = "devnet", package = "sui-adapter" }

tokio = { version = "1.24.1", features = ["full"] }
telemetry-subscribers = { version = "0.2.0" }

anyhow = { version = "1.0.68", features = ["backtrace"] }
thiserror = "1.0.34"

serde = { version = "1.0.144", features = ["derive"] }

clap = { version = "3.2.22", features = [
    "derive",
] } # No upgrade to v4 until color are back.
colored = { version = "2.0.0" }

[workspace.dependencies.serial_test]
# Intended to be used as [dev-dependencies] only.
#
# Attribute macros to control how test can run sequentially/parallel.
#    https://tevps.net/blog/serial_test/ 
#
# Imagine a RWLock, the attributes do the following:
#   [serial]     : Equivalent to a writer lock on the "RWLock".
#   [parallel]   : Equivalent to a reader lock on the "RWLock".
#   No Attribute : Can run at anytime, ignores the RWLock.
version = "=0.9.0" # Force the version to keep things safe.

[workspace.dependencies.cargo-husky]
# Intended to be used as [dev-dependencies] only.
#
# Git hooks of common Rust operations.
#    https://github.com/rhysd/cargo-husky#readme
version = "=1.5.0" # Force the version to keep things safe.
default-features = false # Disable features which are enabled by default
features = [
    "precommit-hook",
    "run-for-all",
    "run-cargo-test",
    "run-cargo-clippy",
    "run-cargo-fmt",
]
